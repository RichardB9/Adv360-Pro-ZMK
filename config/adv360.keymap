/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 4                                                                         &mo 3          &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &kp K_VOLUME_UP                                                                &kp HOME       &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &lt 5 A    &kp S     &kp D     &lt 5 F    &kp G   &kp K_VOLUME_DOWN  &kp LEFT_ALT      &kp HOME        &kp LGUI       &kp RCTRL  &kp END        &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                        &mo 1           &kp PG_UP                                &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp SPACE          &kp LEFT_CONTROL  &kp DELETE      &kp RIGHT_ALT  &kp ENTER  &kp BACKSPACE          &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                           &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                            &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp KP_MINUS     &kp KP_PLUS  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp COLON        &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp KP_MULTIPLY                          &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp BACKSPACE    &kp ENTER    &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F1           &kp F2            &kp F3                &kp F4                 &kp F5          &tog 1                                      &mo 3   &kp F6    &kp F7       &kp F8         &kp F9     &kp F10  &kp F11
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans          &none                                       &none   &kp HOME  &kp HOME     &kp END        &kp END    &trans   &kp F12
&trans  &kp AMPERSAND    &kp DOLLAR        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &none   &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &trans   &kp PRINTSCREEN
&trans  &kp HASH         &kp CARET         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                          &trans      &trans                  &trans    &kp PAGE_UP  &kp PAGE_DOWN  &trans     &trans   &trans
&trans  &trans           &kp C_PLAY_PAUSE  &kp C_PREV            &kp C_NEXT                             &trans  &trans  &trans      &trans  &trans  &trans            &trans       &trans         &trans     &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                  &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&tog 4  &none         &none         &none         &none         &none         &bootloader                                                            &bootloader             &none         &none         &none         &none         &none         &none
&none   &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none   &none         &none         &none         &none         &none                                             &none      &none                                           &none         &none         &none         &none         &none         &none
&none   &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        layer_GAME {
            bindings = <
&kp EQUAL       &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &to 0                                                                                 &mo 3          &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp TAB         &kp Q         &kp W         &kp E         &kp R   &kp T                                                                                 &kp HOME       &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESC         &kp LEFT_SHIFT  &kp A         &kp S         &kp D         &kp F   &kp G      &kp LEFT_ALT      &kp C_VOLUME_UP        &kp LGUI       &kp RIGHT_CONTROL  &kp END        &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp B           &kp Z         &kp X         &kp C         &kp V                                &kp C_VOLUME_DOWN      &trans                                           &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2           &trans          &trans        &trans        &kp B                 &kp SPACE  &kp LEFT_CONTROL  &kp DELETE             &kp RIGHT_ALT  &kp ENTER          &kp BACKSPACE          &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COLON        &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans           &trans           &trans           &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Cond_keypad {
            if-layers = <0>;
            then-layer = <1>;
        };
    };
};
